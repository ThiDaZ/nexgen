package gui;

import static gui.SignIn.logger;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.MySQL;

public class UserManage extends javax.swing.JPanel {

    /**
     * Creates new form UserManagement
     */
    public UserManage() {
        initComponents();
        loadusers("SELECT * FROM `user` INNER JOIN "
                + "`type` ON `user`.`user_type_id`=`type`.`id` INNER JOIN `status` ON "
                + "`user`.`status_id` = `status`.`id`");
        loadtypes();
        loadstatus();
    }

    private void reset() {
        addUserButton.setEnabled(true);

        fnameField.setText("");
        lnameField.setText("");
        mobileField.setText("");
        usernameField.setText("");
        passwordField.setText("");
        typeComboBox.setSelectedIndex(0);
        statusComboBox.setSelectedIndex(0);
        userSearchField.setText("");

    }

    private HashMap<String, String> typemap = new HashMap();

    private void loadtypes() {
        try {
            ResultSet resultset = MySQL.execute("SELECT * FROM `type`");
            Vector v = new Vector();
            v.add("select");
            while (resultset.next()) {
                v.add(resultset.getString("type"));
                typemap.put(resultset.getString("type"), resultset.getString("id"));
            }

            DefaultComboBoxModel model = (DefaultComboBoxModel) typeComboBox.getModel();
            model.removeAllElements();

            model.addAll(v);
            typeComboBox.setSelectedIndex(0);
        } catch (Exception e) {
            logger.log(Level.WARNING, "Somthing went worng!", e);
        }

    }

    private HashMap<String, String> statusmap = new HashMap();

    private void loadstatus() {
        try {
            ResultSet resultset = MySQL.execute("SELECT * FROM `status`");
            Vector v = new Vector();
            v.add("select");
            while (resultset.next()) {
                v.add(resultset.getString("status"));
                statusmap.put(resultset.getString("status"), resultset.getString("id"));
            }

            DefaultComboBoxModel model = (DefaultComboBoxModel) statusComboBox.getModel();
            model.removeAllElements();

            model.addAll(v);
            statusComboBox.setSelectedIndex(0);

        } catch (Exception e) {
            logger.log(Level.WARNING, "Somthing went worng!", e);
        }

    }

    private void loadusers(String query) {

        try {

            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            ResultSet resultset = MySQL.execute(query);

            while (resultset.next()) {

                Vector v = new Vector();

                v.add(resultset.getString("id"));
                v.add(resultset.getString("fname"));
                v.add(resultset.getString("lname"));
                v.add(resultset.getString("mobile"));
                v.add(resultset.getString("username"));
                v.add(resultset.getString("status.status"));
                v.add(resultset.getString("type.type"));

                model.addRow(v);

            }
        } catch (Exception e) {
            logger.log(Level.WARNING, "Somthing went worng!", e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fnameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lnameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mobileField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        statusComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        addUserButton = new javax.swing.JButton();
        updateUserButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        userSearchField = new javax.swing.JTextField();
        resetButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(1350, 852));
        setPreferredSize(new java.awt.Dimension(1350, 852));

        jLabel1.setText("First Name");

        jLabel2.setText("Last Name");

        jLabel3.setText("Mobile");

        jLabel4.setText("Username");

        jLabel5.setText("Type");

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Password");

        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText("Status");

        addUserButton.setText("Create Account");
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });

        updateUserButton.setText("Update Account");
        updateUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(25, 25, 25)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(18, 18, 18)
                            .addComponent(fnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(lnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mobileField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(22, 22, 22)
                            .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel8))
                            .addGap(43, 43, 43)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(mobileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(addUserButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateUserButton)
                .addGap(51, 51, 51))
        );

        jPanel2.setLayout(new java.awt.BorderLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "First Name", "Last Name", "Mobile", "Username", "Status", "Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
        }

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        userSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                userSearchFieldKeyReleased(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(userSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(561, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetButton))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        userSearchField.putClientProperty("JTextField.placeholderText", "Search Name");

        jPanel2.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 32)); // NOI18N
        jLabel7.setText("User Management");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(28, 28, 28))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(24, 24, 24)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(170, 309, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        addUserButton.setEnabled(false);

        if (evt.getClickCount() == 2) {
            int selectedrow = jTable1.getSelectedRow();

            if (selectedrow != -1) {
                String firstname = jTable1.getValueAt(selectedrow, 1).toString();
                fnameField.setText(firstname);

                String lastname = jTable1.getValueAt(selectedrow, 2).toString();
                lnameField.setText(lastname);

                String mobile = jTable1.getValueAt(selectedrow, 3).toString();
                mobileField.setText(mobile);

                String username = jTable1.getValueAt(selectedrow, 4).toString();
                usernameField.setText(username);

                String type = jTable1.getValueAt(selectedrow, 6).toString();
                typeComboBox.setSelectedItem(type);

                String status = jTable1.getValueAt(selectedrow, 5).toString();
                statusComboBox.setSelectedItem(status);
            }

        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void updateUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUserButtonActionPerformed

        int selectedrow = jTable1.getSelectedRow();

        if (selectedrow != -1) {
            String id = jTable1.getValueAt(selectedrow, 0).toString();
            String fname = fnameField.getText();
            String lname = lnameField.getText();
            String mobile = mobileField.getText();
            String username = usernameField.getText();
            String password = String.valueOf(passwordField.getPassword());
            String type = typeComboBox.getSelectedItem().toString();
            String status = statusComboBox.getSelectedItem().toString();

            try {
                MySQL.execute("UPDATE `user` SET `fname`='" + fname + "', `lname`='" + lname + "' ,`mobile`='" + mobile + "' ,`username`='" + username + "' ,`password`='" + password + "' , `user_type_id`='" + typemap.get(type) + "' ,`status_id`='" + statusmap.get(status) + "' WHERE `id` ='" + id + "'");
                reset();
                loadusers("SELECT * FROM `user` INNER JOIN "
                        + "`type` ON `user`.`user_type_id`=`type`.`id` INNER JOIN `status` ON "
                        + "`user`.`status_id` = `status`.`id`");
                JOptionPane.showMessageDialog(this, "User has updated!", "message", JOptionPane.PLAIN_MESSAGE);

            } catch (Exception ex) {
                Logger.getLogger(UserManage.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "please select user", "message", JOptionPane.PLAIN_MESSAGE);
        }

    }//GEN-LAST:event_updateUserButtonActionPerformed

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed

        try {
            String fname = fnameField.getText();
            String lname = lnameField.getText();
            String mobile = mobileField.getText();
            String username = usernameField.getText();
            String type = String.valueOf(typeComboBox.getSelectedItem());
            String password = String.valueOf(passwordField.getPassword());

            if (fname.isEmpty()) {
                JOptionPane.showMessageDialog(this, "please enter your first name", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (lname.isEmpty()) {
                JOptionPane.showMessageDialog(this, "please enter your last name", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (!mobile.matches("^07[01245678]{1}[0-9]{7}$")) {
                JOptionPane.showMessageDialog(this, "invalid  mobile", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (username.isEmpty()) {
                JOptionPane.showMessageDialog(this, "please enter your username", "Warning", JOptionPane.WARNING_MESSAGE);
            } else if (password.isEmpty()) {
                JOptionPane.showMessageDialog(this, "please enter your password", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (type.equals("select")) {
                JOptionPane.showMessageDialog(this, "please selct your type", "Warning", JOptionPane.WARNING_MESSAGE);

            } else {

                ResultSet resultset = MySQL.execute("SELECT * FROM `user` WHERE `mobile`='" + mobile + "' AND  `username`='" + username + "'");

                if (resultset.next()) {
                    JOptionPane.showMessageDialog(this, "allrady used your email,nic or mobile", "Warning", JOptionPane.WARNING_MESSAGE);
                } else {
                    MySQL.execute("INSERT INTO `user` (`fname`,`lname`,`mobile`,`username`,`password`,`user_type_id`,`status_id`) VALUES ('" + fname + "','" + lname + "','" + mobile + "','" + username + "','" + password + "','" + typemap.get(type) + "','" + 1 + "')");

                    reset();
                    loadusers("SELECT * FROM `user` INNER JOIN "
                            + "`type` ON `user`.`user_type_id`=`type`.`id` INNER JOIN `status` ON "
                            + "`user`.`status_id` = `status`.`id`");
                    JOptionPane.showMessageDialog(this, "New user add!", "message", JOptionPane.WARNING_MESSAGE);
                }
            }
        } catch (Exception e) {
            logger.log(Level.WARNING, "An error occurred while trying to log in", e);
        }

    }//GEN-LAST:event_addUserButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
    }//GEN-LAST:event_resetButtonActionPerformed

    private void userSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userSearchFieldKeyReleased
        String query = "SELECT * FROM `user` "
                + "INNER JOIN `type` ON `user`.`user_type_id` = `type`.`id` INNER JOIN `status` ON `user`.`status_id` = `status`.`id`";

        if (!userSearchField.getText().isEmpty()) {
            String searchText = userSearchField.getText();
            if (query.contains("WHERE")) {
                query += " OR `fname` LIKE('" + searchText + "%') OR `lname` LIKE('" + searchText + "%') or user.id = '" + searchText + "'";
            } else {
                query += " WHERE `fname` LIKE('" + searchText + "%') OR `lname` LIKE('" + searchText + "%') or user.id = '" + searchText + "'";
            }
        }

        try {
            ResultSet rs = MySQL.execute(query);
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("id"));
                v.add(rs.getString("fname"));
                v.add(rs.getString("lname"));
                v.add(rs.getString("mobile"));
                v.add(rs.getString("username"));
                v.add(rs.getString("status.status"));
                v.add(rs.getString("type.type"));

                model.addRow(v);
            }
        } catch (Exception e) {
            logger.log(Level.WARNING, "An error occurred while trying to log in", e);
        }

    }//GEN-LAST:event_userSearchFieldKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUserButton;
    private javax.swing.JTextField fnameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lnameField;
    private javax.swing.JTextField mobileField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JButton resetButton;
    private javax.swing.JComboBox<String> statusComboBox;
    private javax.swing.JComboBox<String> typeComboBox;
    private javax.swing.JButton updateUserButton;
    private javax.swing.JTextField userSearchField;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
